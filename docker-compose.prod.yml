version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/portfolio
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    depends_on:
      - db
    restart: always
    volumes:
      - ./backend/app/static/uploads:/app/app/static/uploads
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.odoo.rule=Host(`${BACKEND_DOMAIN}`)"
      #- "traefik.http.services.odoo.loadbalancer.server.port=8000" # TODO check if this is needed
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.tls.certresolver=myresolver"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "81:80"
    environment:
      - REACT_APP_API_URL=${API_URL}
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.odoo.rule=Host(`${FRONTEND_DOMAIN}`)"
      - "traefik.http.routers.odoo.entrypoints=websecure"
      - "traefik.http.routers.odoo.tls.certresolver=myresolver"

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=portfolio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  postgres_data: 